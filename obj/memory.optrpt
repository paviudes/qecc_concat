Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.1.144 Build 20181018

Compiler options: -fPIC -Wall -Wextra -std=c11 -O3 -xavx -qopt-report-phase=vec -qopt-report=5 -c -o obj/memory.o

Begin optimization report for: AllocSimParamsQECC(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(22,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(24,26) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(26,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (24:26) and simul->virtchan (26:5)
   remark #15346: vector dependence: assumed ANTI dependence between simul->virtchan (26:5) and call:malloc(size_t) (24:26)

   LOOP BEGIN at src/memory.c(25,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(26,30) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (26:30) and simul->virtchan (26:5)
      remark #15346: vector dependence: assumed ANTI dependence between simul->virtchan (26:5) and call:malloc(size_t) (26:30)
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(32,2)
   remark #15382: vectorization support: call to function BinaryDot(int, int) cannot be vectorized   [ src/memory.c(33,26) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at src/memory.c(38,2)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at src/memory.c(38,2)
   remark #15389: vectorization support: reference simul has unaligned access   [ src/memory.c(41,4) ]
   remark #15388: vectorization support: reference simul->syndprobs[s] has aligned access   [ src/memory.c(40,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.232
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at src/memory.c(38,2)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference simul has unaligned access   [ src/memory.c(41,4) ]
   remark #15388: vectorization support: reference simul->syndprobs[s] has aligned access   [ src/memory.c(40,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at src/memory.c(38,2)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at src/memory.c(47,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(49,25) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(52,29) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(54,33) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (49:25) and simul->process[i] (54:6)
   remark #15346: vector dependence: assumed ANTI dependence between simul->process[i] (54:6) and call:malloc(size_t) (49:25)

   LOOP BEGIN at src/memory.c(50,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(52,29) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(54,33) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (52:29) and simul->process[i] (54:6)
      remark #15346: vector dependence: assumed ANTI dependence between simul->process[i] (54:6) and call:malloc(size_t) (52:29)

      LOOP BEGIN at src/memory.c(53,4)
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(54,33) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (54:33) and simul->process[i] (54:6)
         remark #15346: vector dependence: assumed ANTI dependence between simul->process[i] (54:6) and call:malloc(size_t) (54:33)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(62,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(64,27) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(65,28) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(68,31) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(69,32) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (64:27) and simul->effprocess[s] (69:5)
   remark #15346: vector dependence: assumed ANTI dependence between simul->effprocess[s] (69:5) and call:malloc(size_t) (64:27)

   LOOP BEGIN at src/memory.c(66,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(68,31) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(69,32) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (68:31) and simul->effprocess[s] (69:5)
      remark #15346: vector dependence: assumed ANTI dependence between simul->effprocess[s] (69:5) and call:malloc(size_t) (68:31)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: AllocDecoderBins(struct simul_t *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(355,2) inlined into src/memory.c(82,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between chans[l] (356:3) and chans[l+1] (356:3)
LOOP END

LOOP BEGIN at src/memory.c(355,2) inlined into src/memory.c(82,2)
<Remainder>
LOOP END

LOOP BEGIN at src/memory.c(86,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: FreeDecoderBins(struct simul_t *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(95,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(96,3) ]
LOOP END
===========================================================================

Begin optimization report for: AllocSimParams(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(116,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/memory.c(116,2)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at src/memory.c(116,2)
      remark #15388: vectorization support: reference simul has aligned access   [ src/memory.c(117,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.490 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at src/memory.c(116,2)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(122,2)
   remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at src/memory.c(128,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(131,3)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at src/memory.c(131,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between simul->metricValues[l] (132:5) and simul->metricValues[l][m] (132:5)
         remark #15346: vector dependence: assumed FLOW dependence between simul->metricValues[l][m] (132:5) and simul->metricValues[l] (132:5)
      LOOP END

      LOOP BEGIN at src/memory.c(131,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(138,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(141,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(143,29) ]
      remark #15382: vectorization support: call to function _?1memset cannot be vectorized   [ src/memory.c(144,4) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (143:29) and simul->logical[l] (145:6)
      remark #15346: vector dependence: assumed ANTI dependence between simul->logical[l] (145:6) and call:malloc(size_t) (143:29)

      LOOP BEGIN at src/memory.c(144,4)
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at src/memory.c(144,4)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between simul->logical[l] (145:6) and simul->logical[l][i][j] (145:6)
            remark #15346: vector dependence: assumed FLOW dependence between simul->logical[l][i][j] (145:6) and simul->logical[l] (145:6)
         LOOP END

         LOOP BEGIN at src/memory.c(144,4)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(155,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/memory.c(155,2)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at src/memory.c(155,2)
      remark #15388: vectorization support: reference simul has aligned access   [ src/memory.c(156,4) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 3.333
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.160 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at src/memory.c(155,2)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(160,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(163,3)
      remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at src/memory.c(166,4)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at src/memory.c(169,5)
            remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(178,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(182,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between simul->sumsq[l][i] (184:5) and simul->sumsq[l] (184:5)
      remark #15346: vector dependence: assumed ANTI dependence between simul->sumsq[l] (184:5) and simul->sumsq[l][i] (184:5)
   LOOP END

   LOOP BEGIN at src/memory.c(182,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(196,2)
   remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(199,3)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at src/memory.c(199,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between simul->runavg[m] (200:5) and simul->runavg[m][i] (200:5)
         remark #15346: vector dependence: assumed FLOW dependence between simul->runavg[m][i] (200:5) and simul->runavg[m] (200:5)
      LOOP END

      LOOP BEGIN at src/memory.c(199,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(206,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(208,34) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(210,38) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (208:34) and simul->levelOneChannels[s] (210:5)
   remark #15346: vector dependence: assumed ANTI dependence between simul->levelOneChannels[s] (210:5) and call:malloc(size_t) (208:34)

   LOOP BEGIN at src/memory.c(209,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(210,38) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (210:38) and simul->levelOneChannels[s] (210:5)
      remark #15346: vector dependence: assumed ANTI dependence between simul->levelOneChannels[s] (210:5) and call:malloc(size_t) (210:38)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FreeSimParamsQECC(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(226,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(229,4) ]

   LOOP BEGIN at src/memory.c(228,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(229,4) ]
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(237,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(242,5) ]

   LOOP BEGIN at src/memory.c(239,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(242,5) ]

      LOOP BEGIN at src/memory.c(241,4)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(242,5) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(250,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(254,4) ]

   LOOP BEGIN at src/memory.c(252,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(254,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FreeSimParams(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(281,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(282,3) ]
LOOP END

LOOP BEGIN at src/memory.c(285,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(286,3) ]
LOOP END

LOOP BEGIN at src/memory.c(290,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(293,4) ]

   LOOP BEGIN at src/memory.c(292,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(293,4) ]
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(306,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(307,3) ]
LOOP END

LOOP BEGIN at src/memory.c(309,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(310,3) ]
LOOP END

LOOP BEGIN at src/memory.c(315,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(316,3) ]
LOOP END

LOOP BEGIN at src/memory.c(320,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(325,5) ]

   LOOP BEGIN at src/memory.c(322,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(325,5) ]

      LOOP BEGIN at src/memory.c(324,4)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(325,5) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(334,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(339,4) ]

   LOOP BEGIN at src/memory.c(338,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(339,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CountIndepLogicalChannels(int *, int *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(355,2)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between chans[l] (356:3) and chans[l+1] (356:3)
LOOP END

LOOP BEGIN at src/memory.c(355,2)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at src/memory.c(355,2)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at src/memory.c(355,2)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: MemManageChannels(double *****, int *, int *, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(355,2) inlined into src/memory.c(367,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between chans[l] (356:3) and chans[l+1] (356:3)
LOOP END

LOOP BEGIN at src/memory.c(355,2) inlined into src/memory.c(367,11)
<Remainder>
LOOP END

LOOP BEGIN at src/memory.c(372,3)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(374,18) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(378,22) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(381,26) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(383,30) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(384,33) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (374:18) and channels[l] (384:6)
   remark #15346: vector dependence: assumed ANTI dependence between channels[l] (384:6) and call:malloc(size_t) (374:18)

   LOOP BEGIN at src/memory.c(376,4)
      remark #15523: loop was not vectorized: loop control variable c was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at src/memory.c(379,5)
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(381,26) ]
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(383,30) ]
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(384,33) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (381:26) and channels[l] (384:6)
         remark #15346: vector dependence: assumed ANTI dependence between channels[l] (384:6) and call:malloc(size_t) (381:26)

         LOOP BEGIN at src/memory.c(382,6)
            remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(383,30) ]
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (383:30) and channels[l] (383:7)
            remark #15346: vector dependence: assumed ANTI dependence between channels[l] (383:7) and call:malloc(size_t) (383:30)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(392,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ src/memory.c(395,4) ]

   LOOP BEGIN at src/memory.c(395,4)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ src/memory.c(397,5) ]

      LOOP BEGIN at src/memory.c(397,5)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(400,7) ]

         LOOP BEGIN at src/memory.c(399,6)
            remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(400,7) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: MemManageInputChannels(double ****, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(421,3)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(423,23) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(426,27) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(428,31) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(429,34) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (423:23) and inputchannels[q] (429:5)
   remark #15346: vector dependence: assumed ANTI dependence between inputchannels[q] (429:5) and call:malloc(size_t) (423:23)

   LOOP BEGIN at src/memory.c(424,4)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(426,27) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(428,31) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(429,34) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (426:27) and inputchannels[q] (429:5)
      remark #15346: vector dependence: assumed ANTI dependence between inputchannels[q] (429:5) and call:malloc(size_t) (426:27)

      LOOP BEGIN at src/memory.c(427,5)
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(428,31) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (428:31) and inputchannels[q] (428:6)
         remark #15346: vector dependence: assumed ANTI dependence between inputchannels[q] (428:6) and call:malloc(size_t) (428:31)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(436,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ src/memory.c(438,4) ]

   LOOP BEGIN at src/memory.c(438,4)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(441,6) ]

      LOOP BEGIN at src/memory.c(440,5)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(441,6) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================
