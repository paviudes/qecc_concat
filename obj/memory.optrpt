Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.1.144 Build 20181018

Compiler options: -fPIC -Wall -Wextra -std=c11 -O3 -xavx -qopt-report-phase=vec -qopt-report=5 -c -o obj/memory.o

Begin optimization report for: AllocSimParamsQECC(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(19,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(20,26) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(22,30) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (20:26) and simul->virtchan (22:5)
   remark #15346: vector dependence: assumed ANTI dependence between simul->virtchan (22:5) and call:malloc(size_t) (20:26)

   LOOP BEGIN at src/memory.c(21,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(22,30) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (22:30) and simul->virtchan (22:5)
      remark #15346: vector dependence: assumed ANTI dependence between simul->virtchan (22:5) and call:malloc(size_t) (22:30)
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(29,2)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at src/memory.c(29,2)
   remark #15389: vectorization support: reference simul has unaligned access   [ src/memory.c(31,4) ]
   remark #15388: vectorization support: reference simul->syndprobs[s] has aligned access   [ src/memory.c(30,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.232
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at src/memory.c(29,2)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference simul has unaligned access   [ src/memory.c(31,4) ]
   remark #15388: vectorization support: reference simul->syndprobs[s] has aligned access   [ src/memory.c(30,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 2.140 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at src/memory.c(29,2)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at src/memory.c(37,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(38,25) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(40,29) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(42,33) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (38:25) and simul->process[i] (42:6)
   remark #15346: vector dependence: assumed ANTI dependence between simul->process[i] (42:6) and call:malloc(size_t) (38:25)

   LOOP BEGIN at src/memory.c(39,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(40,29) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(42,33) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (40:29) and simul->process[i] (42:6)
      remark #15346: vector dependence: assumed ANTI dependence between simul->process[i] (42:6) and call:malloc(size_t) (40:29)

      LOOP BEGIN at src/memory.c(41,4)
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(42,33) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (42:33) and simul->process[i] (42:6)
         remark #15346: vector dependence: assumed ANTI dependence between simul->process[i] (42:6) and call:malloc(size_t) (42:33)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(50,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(51,27) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(52,28) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(54,31) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(55,32) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (51:27) and simul->effprocess[s] (55:5)
   remark #15346: vector dependence: assumed ANTI dependence between simul->effprocess[s] (55:5) and call:malloc(size_t) (51:27)

   LOOP BEGIN at src/memory.c(53,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(54,31) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(55,32) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (54:31) and simul->effprocess[s] (55:5)
      remark #15346: vector dependence: assumed ANTI dependence between simul->effprocess[s] (55:5) and call:malloc(size_t) (54:31)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: AllocDecoderBins(struct simul_t *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(316,2) inlined into src/memory.c(67,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between chans[l] (317:3) and chans[l+1] (317:3)
LOOP END

LOOP BEGIN at src/memory.c(316,2) inlined into src/memory.c(67,2)
<Remainder>
LOOP END

LOOP BEGIN at src/memory.c(71,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: FreeDecoderBins(struct simul_t *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(79,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(80,3) ]
LOOP END
===========================================================================

Begin optimization report for: AllocSimParams(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(97,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/memory.c(97,2)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at src/memory.c(97,2)
      remark #15388: vectorization support: reference simul has aligned access   [ src/memory.c(98,3) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 1.490 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at src/memory.c(97,2)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(103,2)
   remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at src/memory.c(108,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(110,3)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at src/memory.c(110,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between simul->metricValues[l] (111:5) and simul->metricValues[l][m] (111:5)
         remark #15346: vector dependence: assumed FLOW dependence between simul->metricValues[l][m] (111:5) and simul->metricValues[l] (111:5)
      LOOP END

      LOOP BEGIN at src/memory.c(110,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(117,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(119,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(120,29) ]
      remark #15382: vectorization support: call to function _?1memset cannot be vectorized   [ src/memory.c(121,4) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (120:29) and simul->logical[l] (122:6)
      remark #15346: vector dependence: assumed ANTI dependence between simul->logical[l] (122:6) and call:malloc(size_t) (120:29)

      LOOP BEGIN at src/memory.c(121,4)
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at src/memory.c(121,4)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between simul->logical[l] (122:6) and simul->logical[l][i][j] (122:6)
            remark #15346: vector dependence: assumed FLOW dependence between simul->logical[l][i][j] (122:6) and simul->logical[l] (122:6)
         LOOP END

         LOOP BEGIN at src/memory.c(121,4)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(132,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/memory.c(132,2)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at src/memory.c(132,2)
      remark #15388: vectorization support: reference simul has aligned access   [ src/memory.c(133,4) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 3.333
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.160 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at src/memory.c(132,2)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(141,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(143,3)
      remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at src/memory.c(145,5)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at src/memory.c(147,6)
            remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(156,2)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(159,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between simul->sumsq[l][i] (160:6) and simul->sumsq[l] (160:6)
      remark #15346: vector dependence: assumed ANTI dependence between simul->sumsq[l] (160:6) and simul->sumsq[l][i] (160:6)
   LOOP END

   LOOP BEGIN at src/memory.c(159,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(172,2)
   remark #15523: loop was not vectorized: loop control variable m was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at src/memory.c(174,3)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at src/memory.c(174,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between simul->runavg[m] (175:5) and simul->runavg[m][i] (175:5)
         remark #15346: vector dependence: assumed FLOW dependence between simul->runavg[m][i] (175:5) and simul->runavg[m] (175:5)
      LOOP END

      LOOP BEGIN at src/memory.c(174,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(181,2)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(182,34) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(184,38) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (182:34) and simul->levelOneChannels[s] (184:5)
   remark #15346: vector dependence: assumed ANTI dependence between simul->levelOneChannels[s] (184:5) and call:malloc(size_t) (182:34)

   LOOP BEGIN at src/memory.c(183,3)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(184,38) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (184:38) and simul->levelOneChannels[s] (184:5)
      remark #15346: vector dependence: assumed ANTI dependence between simul->levelOneChannels[s] (184:5) and call:malloc(size_t) (184:38)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FreeSimParamsQECC(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(199,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(201,4) ]

   LOOP BEGIN at src/memory.c(200,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(201,4) ]
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(208,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(211,5) ]

   LOOP BEGIN at src/memory.c(209,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(211,5) ]

      LOOP BEGIN at src/memory.c(210,4)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(211,5) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(219,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(221,4) ]

   LOOP BEGIN at src/memory.c(220,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(221,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: FreeSimParams(struct simul_t *, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(247,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(248,3) ]
LOOP END

LOOP BEGIN at src/memory.c(251,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(252,3) ]
LOOP END

LOOP BEGIN at src/memory.c(256,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(258,4) ]

   LOOP BEGIN at src/memory.c(257,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(258,4) ]
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(271,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(272,3) ]
LOOP END

LOOP BEGIN at src/memory.c(274,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(275,3) ]
LOOP END

LOOP BEGIN at src/memory.c(280,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(281,3) ]
LOOP END

LOOP BEGIN at src/memory.c(285,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(288,5) ]

   LOOP BEGIN at src/memory.c(286,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(288,5) ]

      LOOP BEGIN at src/memory.c(287,4)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(288,5) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(297,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(301,4) ]

   LOOP BEGIN at src/memory.c(300,3)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(301,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CountIndepLogicalChannels(int *, int *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(316,2)
<Multiversioned v1>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between chans[l] (317:3) and chans[l+1] (317:3)
LOOP END

LOOP BEGIN at src/memory.c(316,2)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at src/memory.c(316,2)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at src/memory.c(316,2)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: MemManageChannels(double *****, int *, int *, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(316,2) inlined into src/memory.c(327,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between chans[l] (317:3) and chans[l+1] (317:3)
LOOP END

LOOP BEGIN at src/memory.c(316,2) inlined into src/memory.c(327,11)
<Remainder>
LOOP END

LOOP BEGIN at src/memory.c(331,3)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(332,18) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(335,22) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(337,26) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(339,30) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(340,33) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (332:18) and channels[l] (340:6)
   remark #15346: vector dependence: assumed ANTI dependence between channels[l] (340:6) and call:malloc(size_t) (332:18)

   LOOP BEGIN at src/memory.c(334,4)
      remark #15523: loop was not vectorized: loop control variable c was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at src/memory.c(336,5)
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(337,26) ]
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(339,30) ]
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(340,33) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (337:26) and channels[l] (340:6)
         remark #15346: vector dependence: assumed ANTI dependence between channels[l] (340:6) and call:malloc(size_t) (337:26)

         LOOP BEGIN at src/memory.c(338,6)
            remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(339,30) ]
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (339:30) and channels[l] (339:7)
            remark #15346: vector dependence: assumed ANTI dependence between channels[l] (339:7) and call:malloc(size_t) (339:30)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(347,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ src/memory.c(349,4) ]

   LOOP BEGIN at src/memory.c(349,4)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ src/memory.c(350,5) ]

      LOOP BEGIN at src/memory.c(350,5)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(352,7) ]

         LOOP BEGIN at src/memory.c(351,6)
            remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(352,7) ]
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: MemManageInputChannels(double ****, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at src/memory.c(372,3)
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(373,23) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(375,27) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(377,31) ]
   remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(378,34) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (373:23) and inputchannels[q] (378:5)
   remark #15346: vector dependence: assumed ANTI dependence between inputchannels[q] (378:5) and call:malloc(size_t) (373:23)

   LOOP BEGIN at src/memory.c(374,4)
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(375,27) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(377,31) ]
      remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(378,34) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (375:27) and inputchannels[q] (378:5)
      remark #15346: vector dependence: assumed ANTI dependence between inputchannels[q] (378:5) and call:malloc(size_t) (375:27)

      LOOP BEGIN at src/memory.c(376,5)
         remark #15382: vectorization support: call to function malloc(size_t) cannot be vectorized   [ src/memory.c(377,31) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between call:malloc(size_t) (377:31) and inputchannels[q] (377:6)
         remark #15346: vector dependence: assumed ANTI dependence between inputchannels[q] (377:6) and call:malloc(size_t) (377:31)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at src/memory.c(384,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ src/memory.c(385,4) ]

   LOOP BEGIN at src/memory.c(385,4)
      remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(387,6) ]

      LOOP BEGIN at src/memory.c(386,5)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ src/memory.c(387,6) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================
